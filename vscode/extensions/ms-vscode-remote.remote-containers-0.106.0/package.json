{
	"name": "remote-containers",
	"displayName": "Remote - Containers",
	"description": "Open any folder inside (or mounted into) a container and take advantage of Visual Studio Code's full feature set.",
	"version": "0.106.0",
	"preview": true,
	"publisher": "ms-vscode-remote",
	"icon": "resources/remote-containers.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-remote-release.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/vscode-remote-release/issues"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"engines": {
		"vscode": "^1.43.0"
	},
	"extensionKind": [
		"ui"
	],
	"categories": [
		"Other"
	],
	"keywords": [
		"remote",
		"docker",
		"containers",
		"remote development",
		"dev container",
		"development container"
	],
	"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
	"activationEvents": [
		"onCommand:remote-containers.reopenInContainer",
		"onCommand:remote-containers.rebuildAndReopenInContainer",
		"onCommand:remote-containers.reopenLocally",
		"onCommand:remote-containers.openFolder",
		"onCommand:remote-containers.openRepositoryInVolume",
		"onCommand:remote-containers.openWorkspace",
		"onCommand:remote-containers.attachToRunningContainer",
		"onCommand:remote-containers.attachToRunningContainerFromViewlet",
		"onCommand:remote-containers.rebuildContainer",
		"onCommand:remote-containers.createDevContainerFile",
		"onCommand:remote-containers.openDevContainerFile",
		"onCommand:remote-containers.openAttachDevContainerFile",
		"onCommand:remote-containers.settings",
		"onCommand:remote-containers.getHelp",
		"onCommand:remote-containers.getStarted",
		"onCommand:remote-containers.trySample",
		"onCommand:remote-containers.reportIssue",
		"onCommand:remote-containers.provideFeedback",
		"onCommand:remote-containers.revealLogTerminal",
		"onCommand:remote-containers.openLogFile",
		"onCommand:remote-containers.addExtensionToConfig",
		"workspaceContains:.devcontainer/devcontainer.json",
		"workspaceContains:.devcontainer.json",
		"onResolveRemoteAuthority:dev-container",
		"onResolveRemoteAuthority:attached-container",
		"onDebugResolve:extensionHost",
		"onView:targetsContainers"
	],
	"main": "./dist/extension",
	"enableProposedApi": true,
	"contributes": {
		"configuration": {
			"title": "Remote - Containers",
			"properties": {
				"remote.containers.defaultExtensions": {
					"type": "array",
					"description": "Configures the list of extensions to always install while creating a container.",
					"default": [],
					"items": {
						"type": "string",
						"pattern": "([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)",
						"errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
					}
				},
				"remote.containers.enableContainersExplorer": {
					"type": "boolean",
					"description": "Enables the Containers Explorer in the Remote Explorer.",
					"default": true
				},
				"remote.containers.workspaceMountConsistency": {
					"type": "string",
					"enum": [
						"consistent",
						"cached",
						"delegated"
					],
					"enumDescriptions": [
						"Perfect consistency.",
						"The host’s view is authoritative.",
						"The container’s view is authoritative."
					],
					"description": "The consistency level used for the workspace mount (existing containers must be rebuilt to take effect).",
					"default": "cached"
				},
				"dotfiles.repository": {
					"type": "string",
					"description": "URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository."
				},
				"dotfiles.installCommand": {
					"type": "string",
					"description": "The command to run after cloning the dotfiles repository. Defaults to `~/dotfiles/install.sh`.",
					"default": "~/dotfiles/install.sh"
				},
				"dotfiles.targetPath": {
					"type": "string",
					"description": "The path to clone the dotfiles repository to. Defaults to `~/dotfiles`.",
					"default": "~/dotfiles"
				},
				"remote.containers.dotfiles.repository": {
					"type": "string",
					"description": "URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository for DevContainers. This overrides the common setting for the dotfiles repository."
				},
				"remote.containers.dotfiles.installCommand": {
					"type": "string",
					"description": "The command to run after cloning the dotfiles repository for DevContainers. This overrides the common setting for the dotfiles install command."
				},
				"remote.containers.dotfiles.targetPath": {
					"type": "string",
					"description": "The path to clone the dotfiles repository to for DevContainers. This overrides the common setting for the dotfiles target path."
				}
			}
		},
		"commands": [
			{
				"command": "remote-containers.reopenInContainer",
				"title": "Reopen in Container",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.rebuildAndReopenInContainer",
				"title": "Rebuild and Reopen in Container",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.reopenLocally",
				"title": "Reopen Locally",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.openFolder",
				"title": "Open Folder in Container...",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/reopen-folder.svg",
					"dark": "resources/dark/reopen-folder.svg"
				}
			},
			{
				"command": "remote-containers.startAndOpenFolder",
				"title": "Open Folder in Container",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/reopen-folder.svg",
					"dark": "resources/dark/reopen-folder.svg"
				}
			},
			{
				"command": "remote-containers.openRepositoryInVolume",
				"title": "Open Repository in Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.openWorkspace",
				"title": "Open Workspace in Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.attachToRunningContainer",
				"title": "Attach to Running Container...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.attachToRunningContainerFromViewlet",
				"title": "Attach Visual Studio Code",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.rebuildContainer",
				"title": "Rebuild Container",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.createDevContainerFile",
				"title": "Add Development Container Configuration Files...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.settings",
				"title": "Settings",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.getHelp",
				"title": "Help",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.getStarted",
				"title": "Getting Started",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.trySample",
				"title": "Try a Sample...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.reportIssue",
				"title": "Report Issue...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.provideFeedback",
				"title": "Provide Feedback",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.openDevContainerFile",
				"title": "Open Container Configuration File",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.openAttachDevContainerFile",
				"title": "Open Attached Container Configuration File...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.revealLogTerminal",
				"title": "Show Log",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.openLogFile",
				"title": "Open Log File...",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.attachToContainer",
				"title": "Attach to Container",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/empty-window.svg",
					"dark": "resources/dark/empty-window.svg"
				}
			},
			{
				"command": "remote-containers.attachToContainerNewWindow",
				"title": "Attach in New Window",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.stopContainer",
				"title": "Stop Container",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.startContainer",
				"title": "Start Container",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/vm-start.svg",
					"dark": "resources/dark/vm-start.svg"
				}
			},
			{
				"command": "remote-containers.removeContainer",
				"title": "Remove Container",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/remove.svg",
					"dark": "resources/dark/remove.svg"
				}
			},
			{
				"command": "remote-containers.removeRecentFolder",
				"title": "Remove Recent Folder",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/remove.svg",
					"dark": "resources/dark/remove.svg"
				}
			},
			{
				"command": "remote-containers.openInBrowser",
				"title": "Open in Browser",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/open-browser.svg",
					"dark": "resources/dark/open-browser.svg"
				}
			},
			{
				"command": "remote-containers.showDetails",
				"title": "Show Details",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.explorerTargetsRefresh",
				"title": "Refresh",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "remote-containers.explorerDetailsRefresh",
				"title": "Refresh",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "remote-containers.inspectDockerResource",
				"title": "Inspect",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.newContainer",
				"title": "New Container",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/plus.svg",
					"dark": "resources/dark/plus.svg"
				}
			},
			{
				"command": "remote-containers.showContainerLog",
				"title": "Show Container Log",
				"category": "Remote-Containers"
			},
			{
				"command": "remote-containers.forwardCandidatePort",
				"title": "Forward Port",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/plus.svg",
					"dark": "resources/dark/plus.svg"
				}
			},
			{
				"command": "remote-containers.stopForwardingPort",
				"title": "Stop Forwarding Port",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/remove.svg",
					"dark": "resources/dark/remove.svg"
				}
			},
			{
				"command": "remote-containers.refreshPorts",
				"title": "Refresh Ports",
				"category": "Remote-Containers",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "remote-containers.addExtensionToConfig",
				"title": "Add to devcontainer.json",
				"category": "Remote-Containers"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "remote-containers.reopenInContainer",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.rebuildAndReopenInContainer",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.reopenLocally",
					"when": "remoteName =~ /^dev-container$/"
				},
				{
					"command": "remote-containers.openFolder",
					"when": "remoteName =~ /^((dev|attached)-container)?$/"
				},
				{
					"command": "remote-containers.openRepositoryInVolume",
					"when": "remoteName =~ /^((dev|attached)-container)?$/"
				},
				{
					"command": "remote-containers.openWorkspace",
					"when": "remoteName =~ /^((dev|attached)-container)?$/"
				},
				{
					"command": "remote-containers.attachToRunningContainer",
					"when": "remoteName =~ /^((dev|attached)-container)?$/"
				},
				{
					"command": "remote-containers.attachToRunningContainerFromViewlet",
					"when": "false"
				},
				{
					"command": "remote-containers.rebuildContainer",
					"when": "remoteName =~ /^dev-container$/"
				},
				{
					"command": "remote-containers.createDevContainerFile",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.openDevContainerFile",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.openDevContainerFile",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.openAttachDevContainerFile",
					"when": "remoteName =~ /^((dev|attached)-container)?$/"
				},
				{
					"command": "remote-containers.getStarted",
					"when": "false"
				},
				{
					"command": "remote-containers.trySample",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.provideFeedback",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.revealLogTerminal",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.attachToContainer",
					"when": "false"
				},
				{
					"command": "remote-containers.attachToContainerNewWindow",
					"when": "false"
				},
				{
					"command": "remote-containers.stopContainer",
					"when": "false"
				},
				{
					"command": "remote-containers.removeContainer",
					"when": "false"
				},
				{
					"command": "remote-containers.startContainer",
					"when": "false"
				},
				{
					"command": "remote-containers.removeRecentFolder",
					"when": "false"
				},
				{
					"command": "remote-containers.openInBrowser",
					"when": "false"
				},
				{
					"command": "remote-containers.showDetails",
					"when": "false"
				},
				{
					"command": "remote-containers.explorerTargetsRefresh",
					"when": "false"
				},
				{
					"command": "remote-containers.explorerDetailsRefresh",
					"when": "false"
				},
				{
					"command": "remote-containers.inspectDockerResource",
					"when": "false"
				},
				{
					"command": "remote-containers.startAndOpenFolder",
					"when": "false"
				},
				{
					"command": "remote-containers.newContainer",
					"when": "false"
				},
				{
					"command": "remote-containers.showContainerLog",
					"when": "false"
				},
				{
					"command": "remote-containers.forwardCandidatePort",
					"when": "false"
				},
				{
					"command": "remote-containers.stopForwardingPort",
					"when": "false"
				},
				{
					"command": "remote-containers.refreshPorts",
					"when": "false"
				},
				{
					"command": "remote-containers.addExtensionToConfig",
					"when": "false"
				}
			],
			"statusBar/windowIndicator": [
				{
					"command": "remote-containers.reopenInContainer",
					"group": "2_local_containers_actions@1",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.openFolder",
					"group": "2_local_containers_actions@2",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.openWorkspace",
					"group": "2_local_containers_actions@3",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.openRepositoryInVolume",
					"group": "2_local_containers_actions@4",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.attachToRunningContainer",
					"group": "2_local_containers_actions@5",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.createDevContainerFile",
					"group": "2_local_containers_actions@6",
					"when": "workspaceFolderCount != 0 && !remoteName"
				},
				{
					"command": "remote-containers.trySample",
					"group": "2_local_containers_actions@7",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.getStarted",
					"group": "2_local_containers_actions@8",
					"when": "!remoteName"
				},
				{
					"command": "remote-containers.reopenLocally",
					"group": "1_remote_containers_actions@1",
					"when": "remoteName =~ /^dev-container$/"
				},
				{
					"command": "remote-containers.rebuildContainer",
					"group": "1_remote_containers_actions@2",
					"when": "remoteName =~ /^dev-container$/"
				},
				{
					"command": "remote-containers.openDevContainerFile",
					"group": "1_remote_containers_actions@4",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.revealLogTerminal",
					"group": "1_remote_containers_actions@5",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.startAndOpenFolder",
					"group": "1_remote_containers_actions@6",
					"when": "remoteName =~ /^(dev|attached)-container$/ && remoteConnectionState == connected"
				},
				{
					"command": "remote-containers.openWorkspace",
					"group": "1_remote_containers_actions@7",
					"when": "remoteName =~ /^(dev|attached)-container$/ && remoteConnectionState == connected"
				},
				{
					"command": "remote-containers.attachToRunningContainer",
					"group": "1_remote_containers_actions@8",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.settings",
					"group": "9_remote_containers_help@1",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.reportIssue",
					"group": "9_remote_containers_help@2",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.provideFeedback",
					"group": "9_remote_containers_help@3",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				},
				{
					"command": "remote-containers.getHelp",
					"group": "9_remote_containers_help@4",
					"when": "remoteName =~ /^(dev|attached)-container$/"
				}
			],
			"view/title": [
				{
					"command": "remote-containers.explorerTargetsRefresh",
					"when": "view == targetsContainers",
					"group": "navigation"
				},
				{
					"command": "remote-containers.newContainer",
					"when": "view == targetsContainers",
					"group": "navigation"
				},
				{
					"command": "remote-containers.explorerDetailsRefresh",
					"when": "view == detailsContainers",
					"group": "navigation"
				},
				{
					"command": "remote-containers.attachToContainer",
					"when": "view == detailsContainers",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "remote-containers.attachToRunningContainerFromViewlet",
					"when": "view == dockerExplorer && viewItem =~ /^(runningLocalContainerNode)$/"
				},
				{
					"command": "remote-containers.attachToRunningContainerFromViewlet",
					"when": "view == dockerContainers && viewItem =~ /^runningContainer$/i",
					"group": "containers_1_general@2"
				},
				{
					"command": "remote-containers.startAndOpenFolder",
					"when": "view == targetsContainers && viewItem =~ /^(dev|attached)Folder$/",
					"group": "1_folder@1"
				},
				{
					"command": "remote-containers.startAndOpenFolder",
					"when": "view == targetsContainers && viewItem =~ /^(dev|attached)Folder$/",
					"group": "inline@1"
				},
				{
					"command": "remote-containers.removeRecentFolder",
					"when": "view == targetsContainers && viewItem == attachedFolder",
					"group": "2_folder@1"
				},
				{
					"command": "remote-containers.removeRecentFolder",
					"when": "view == targetsContainers && viewItem == attachedFolder",
					"group": "inline@2"
				},
				{
					"command": "workbench.action.closeFolder",
					"when": "view == targetsContainers && viewItem == activeattachedFolder",
					"group": "1_folder@1"
				},
				{
					"command": "remote-containers.reopenLocally",
					"when": "view == targetsContainers && viewItem == activedevFolder",
					"group": "1_folder@1"
				},
				{
					"command": "remote-containers.attachToContainer",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/",
					"group": "1_container@1"
				},
				{
					"command": "remote-containers.attachToContainer",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/",
					"group": "inline@1"
				},
				{
					"command": "remote-containers.attachToContainerNewWindow",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/",
					"group": "1_container@2"
				},
				{
					"command": "remote-containers.stopContainer",
					"when": "view == targetsContainers && viewItem =~ /^(active|running)(Dev|)Container$/",
					"group": "2_container@2"
				},
				{
					"command": "remote-containers.removeContainer",
					"when": "view == targetsContainers && viewItem =~ /^(running|exited)(Dev|)Container$/",
					"group": "2_container@3"
				},
				{
					"command": "remote-containers.rebuildContainer",
					"when": "view == targetsContainers && viewItem == activeDevContainer",
					"group": "2_container@1"
				},
				{
					"command": "remote-containers.removeContainer",
					"when": "view == targetsContainers && viewItem =~ /^(running|exited)(Dev|)Container$/",
					"group": "inline@2"
				},
				{
					"command": "remote-containers.startContainer",
					"when": "view == targetsContainers && viewItem =~ /^exited(Dev|)Container$/",
					"group": "1_container@3"
				},
				{
					"command": "remote-containers.showDetails",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container$/",
					"group": "1_container@4"
				},
				{
					"command": "remote-containers.inspectDockerResource",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container$/",
					"group": "1_container@5"
				},
				{
					"command": "remote-containers.showContainerLog",
					"when": "view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container$/",
					"group": "1_container@6"
				},
				{
					"command": "remote-containers.openDevContainerFile",
					"when": "view == detailsContainers && viewItem == devContainer"
				},
				{
					"command": "remote-containers.inspectDockerResource",
					"when": "view == detailsContainers && viewItem =~ /^(image|volume)$/"
				}
			],
			"extension/context": [
				{
					"command": "remote-containers.addExtensionToConfig",
					"group": "2_configure",
					"when": "!isBuiltinExtension && !isBuiltInExtension"
				}
			]
		},
		"languages": [
			{
				"id": "jsonc",
				"filenamePatterns": [
					"**/.devcontainer/devcontainer.json",
					"**/.devcontainer.json"
				]
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "vscode-remote",
				"authority": "dev-container+*",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"tildify": true,
					"workspaceSuffix": "Dev Container"
				}
			},
			{
				"scheme": "vscode-remote",
				"authority": "attached-container+*",
				"formatting": {
					"label": "${path}",
					"separator": "/",
					"tildify": true,
					"workspaceSuffix": "Container"
				}
			}
		],
		"views": {
			"remote": [
				{
					"id": "targetsContainers",
					"name": "Containers",
					"group": "targets@2",
					"remoteName": [
						"dev-container",
						"attached-container"
					]
				},
				{
					"id": "detailsContainers",
					"name": "Details (Containers)",
					"when": "remote-containers:showDetails",
					"group": "details@1",
					"remoteName": [
						"dev-container",
						"attached-container"
					]
				}
			]
		},
		"remoteHelp": {
			"getStarted": "https://aka.ms/vscode-remote/containers/tutorial-sandbox",
			"feedback": "https://aka.ms/vscode-remote/containers/provide-feedback",
			"documentation": "https://aka.ms/vscode-remote/containers",
			"issues": "https://aka.ms/vscode-remote/containers/issues",
			"remoteName": [
				"dev-container",
				"attached-container"
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm-run-all clean definitions compile-prod",
		"compile": "npm-run-all clean definitions compile-dev",
		"watch": "npm-run-all clean definitions compile-watch",
		"precommit": "node build/gulpfile.hygiene.js",
		"package": "vsce package --yarn",
		"definitions": "npm-run-all definitions-clean definitions-copy",
		"lint": "tslint -p .",
		"compile-prod": "webpack --mode production",
		"compile-dev": "webpack --mode none --info-verbosity verbose",
		"compile-watch": "webpack --mode none --watch --info-verbosity verbose",
		"definitions-clean": "rimraf dist/node_modules/vscode-dev-containers",
		"definitions-copy": "copyfiles --all \"node_modules/vscode-dev-containers/**/*\" dist",
		"clean": "rimraf dist built",
		"test": "env TS_NODE_PROJECT=test/core/tsconfig.json mocha -r ts-node/register --exit test/core/**/*.test.ts",
		"test-dev-containers": "env TS_NODE_PROJECT=test/dev-containers/tsconfig.json mocha -r ts-node/register --exit test/dev-containers/**/*.test.ts",
		"copytestconfigsforalpine": "/bin/bash -c 'cd test/configs && for f in *; do if [[ -d $f ]] && [[ $f != *alpine* ]]; then cp -r -T $f $f-alpine ; fi ; done'"
	},
	"devDependencies": {
		"@types/chai": "^4.2.9",
		"@types/dockerode": "^2.5.20",
		"@types/follow-redirects": "^1.8.0",
		"@types/js-yaml": "^3.12.2",
		"@types/markdown-it": "^0.0.9",
		"@types/mkdirp": "^0.5.2",
		"@types/mocha": "^7.0.1",
		"@types/node": "^12.12.28",
		"@types/pull-stream": "^3.6.0",
		"@types/tv4": "^1.2.29",
		"@types/vscode": "^1.41.0",
		"@types/webpack": "^4.41.6",
		"chai": "4.2.0",
		"copyfiles": "^2.2.0",
		"event-stream": "^4.0.1",
		"gulp": "^4.0.2",
		"gulp-filter": "^6.0.0",
		"husky": "^4.2.3",
		"jsonc": "^2.0.0",
		"mocha": "^7.0.1",
		"mocha-junit-reporter": "^1.23.3",
		"node-pty": "^0.9.0",
		"npm-run-all": "^4.1.5",
		"p-all": "^2.1.0",
		"ts-loader": "^6.2.1",
		"ts-node": "^8.6.2",
		"tslint": "^6.0.0",
		"tv4": "^1.3.0",
		"typescript": "^3.7.5",
		"typescript-formatter": "^7.2.2",
		"vinyl": "^2.2.0",
		"vinyl-fs": "^3.0.3",
		"vsce": "^1.73.0",
		"vscode-nls-dev": "^3.3.1",
		"webpack": "^4.41.6",
		"webpack-cli": "^3.3.11"
	},
	"dependencies": {
		"dockerode": "^3.1.0",
		"follow-redirects": "^1.10.0",
		"js-yaml": "^3.13.1",
		"jsonc-parser": "^2.2.0",
		"markdown-it": "^10.0.0",
		"mkdirp": "^0.5.1",
		"muxrpc": "^6.5.0",
		"pull-stream": "^3.6.14",
		"split-ca": "^1.0.1",
		"stream-to-pull-stream": "^1.7.3",
		"vscode-dev-containers": "https://github.com/microsoft/vscode-dev-containers/releases/download/v0.106.0/vscode-dev-containers-0.106.0.tgz",
		"vscode-extension-telemetry": "^0.1.2",
		"vscode-uri": "^2.1.1"
	},
	"__metadata": {
		"id": "93ce222b-5f6f-49b7-9ab1-a0463c6238df",
		"publisherId": "ac9410a2-0d75-40ec-90de-b59bb705801d",
		"publisherDisplayName": "Microsoft"
	}
}